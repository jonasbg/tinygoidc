name: Build Release Binaries

on:
  release:
    types:
      - published

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
            archive_extension: tar.gz
          - goos: linux
            goarch: arm64
            archive_extension: tar.gz
          - goos: darwin
            goarch: amd64
            archive_extension: tar.gz
          - goos: darwin
            goarch: arm64
            archive_extension: tar.gz
          - goos: windows
            goarch: amd64
            archive_extension: zip
          - goos: windows
            goarch: arm64
            archive_extension: zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Build and package binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          set -euo pipefail

          APP_NAME="mocc"
          SUFFIX="${GOOS}-${GOARCH}"
          STAGING_DIR="dist/${APP_NAME}-${SUFFIX}"
          BINARY_NAME="${APP_NAME}"

          if [ "${GOOS}" = "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi

          mkdir -p "${STAGING_DIR}"

          GOOS="${GOOS}" GOARCH="${GOARCH}" CGO_ENABLED=0 \
            go build -trimpath -ldflags "-s -w" -o "${STAGING_DIR}/${BINARY_NAME}" ./cmd/mocc

          if [ "${GOOS}" = "windows" ]; then
            (cd "${STAGING_DIR}" && zip -r "../${APP_NAME}-${SUFFIX}.zip" "${BINARY_NAME}")
          else
            (cd "${STAGING_DIR}" && tar -czf "../${APP_NAME}-${SUFFIX}.tar.gz" "${BINARY_NAME}")
          fi

          rm -rf "${STAGING_DIR}"

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/mocc-${{ matrix.goos }}-${{ matrix.goarch }}.${{ matrix.archive_extension }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
